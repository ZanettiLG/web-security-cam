version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: web-security-cam-postgres
    environment:
      POSTGRES_DB: security_cam_db
      POSTGRES_USER: security_user
      POSTGRES_PASSWORD: security_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - security-cam-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: web-security-cam-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - security-cam-network
    restart: unless-stopped

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: web-security-cam-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - security-cam-network
    command: server /data --console-address ":9001"
    restart: unless-stopped

  # MinIO Client (for bucket creation)
  createbuckets:
    image: minio/mc:latest
    container_name: web-security-cam-createbuckets
    depends_on:
      - minio
    networks:
      - security-cam-network
    command: >
      sh -c "
      sleep 10 &&
      mc alias set myminio http://minio:9000 minioadmin minioadmin123 &&
      mc mb myminio/recordings --ignore-existing &&
      mc mb myminio/thumbnails --ignore-existing &&
      mc policy set public myminio/recordings &&
      mc policy set public myminio/thumbnails &&
      echo 'Buckets created successfully'
      "
    restart: "no"

  # Application Server
  # server:
  #   build:
  #     context: ./server
  #     dockerfile: Dockerfile
  #   container_name: web-security-cam-server
  #   environment:
  #     - NODE_ENV=production
  #     - IP=${IP:-192.168.1.100}
  #     - USER=${USER:-admin}
  #     - PASS=${PASS:-admin123}
  #     - DATABASE_URL=postgresql://security_user:security_password@postgres:5432/security_cam_db
  #     - MINIO_ENDPOINT=minio
  #     - MINIO_PORT=9000
  #     - MINIO_ACCESS_KEY=minioadmin
  #     - MINIO_SECRET_KEY=minioadmin123
  #     - MINIO_USE_SSL=false
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./server/records:/app/records
  #   depends_on:
  #     - postgres
  #     - minio
  #   networks:
  #     - security-cam-network
  #   restart: unless-stopped

  # # Client Application
  # client:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile
  #   container_name: web-security-cam-client
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - server
  #   networks:
  #     - security-cam-network
  #   restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  security-cam-network:
    driver: bridge